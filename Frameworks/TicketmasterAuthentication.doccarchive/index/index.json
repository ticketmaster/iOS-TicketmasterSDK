{"includedArchiveIdentifiers":["com.ticketmaster.TicketmasterAuthentication"],"interfaceLanguages":{"occ":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/init","title":"init","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication","title":"TMAuthentication","type":"class"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/ticketmasterauthenticationversionnumber","title":"TicketmasterAuthenticationVersionNumber","type":"var"},{"path":"\/documentation\/ticketmasterauthentication\/ticketmasterauthenticationversionstring","title":"TicketmasterAuthenticationVersionString","type":"var"}],"path":"\/documentation\/ticketmasterauthentication","title":"TicketmasterAuthentication","type":"module"}],"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Simple Configuration","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/configure(apikey:region:environment:branding:fetchrule:success:failure:)","title":"func configure(apiKey: String, region: TMXDeploymentRegion, environment: TMXDeploymentEnvironment, branding: Branding?, fetchRule: FetchRule?, success: (_ backendsConfigured: [BackendService]) -> Void, failure: (_ error: Error) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/configure(tmxsettings:branding:fetchrule:success:failure:)","title":"func configure(tmxSettings: TMXSettings, branding: Branding?, fetchRule: FetchRule?, success: (_ backendsConfigured: [BackendService]) -> Void, failure: (_ error: Error) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/configure(brandedservicesettings:fetchrule:success:failure:)","title":"func configure(brandedServiceSettings: BrandedServiceSettings, fetchRule: FetchRule?, success: (_ backendsConfigured: [BackendService]) -> Void, failure: (_ error: Error) -> Void)","type":"method"},{"title":"Advanced Configuration","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/customconfigure(brandedservicesettingarray:fetchrule:success:failure:)","title":"func customConfigure(brandedServiceSettingArray: [BrandedServiceSettings], fetchRule: FetchRule?, success: (_ backendsConfigured: [BackendService]) -> Void, failure: (_ backendsConfigured: [BackendService], _ error: Error) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/customconfigure(brandedservicesettings:apigeeconfig:sourcefilter:fetchrule:success:failure:)","title":"func customConfigure(brandedServiceSettings: BrandedServiceSettings, apigeeConfig: TMApigeeConfig?, sourceFilter: AuthSource?, fetchRule: FetchRule?, success: (_ backendsConfigured: [BackendService]) -> Void, failure: (_ backendsConfigured: [BackendService], _ error: Error) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservicesconfigured(source:instanceid:)","title":"func backendServicesConfigured(source: AuthSource?, instanceID: String?) -> [BackendService]","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/removeallconfiguredbackendservices(completion:)","title":"func removeAllConfiguredBackendServices(completion: (_ success: Bool) -> Void)","type":"method"},{"title":"Login","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/loginselectionpage(backend:loginproperties:fetchrule:callsource:)","title":"func loginSelectionPage(backend: BackendService?, loginProperties: [String : String]?, fetchRule: FetchRule?, callSource: String?) -> UIViewController?","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/login(backend:externaltoken:loginproperties:presentationviewcontroller:fetchrule:callsource:success:aborted:failure:)","title":"func login(backend: BackendService?, externalToken: String?, loginProperties: [String : String]?, presentationViewController: UIViewController?, fetchRule: FetchRule?, callSource: String?, success: (_ authToken: TMAuthToken) -> Void, aborted: (_ oldAuthToken: TMAuthToken?, _ backend: BackendService) -> Void, failure: (_ oldAuthToken: TMAuthToken?, _ error: Error, _ backend: BackendService?) -> Void)","type":"method"},{"title":"Fetch\/Refresh OAuth Token","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/hastoken(backend:)","title":"func hasToken(backend: BackendService?) -> Bool","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/hasunexpiredtoken(backend:)","title":"func hasUnexpiredToken(backend: BackendService?) -> Bool","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/hasvalidatedtoken(backend:)","title":"func hasValidatedToken(backend: BackendService?) -> Bool","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/validtoken(backend:showloginifneeded:loginproperties:presentationviewcontroller:fetchrule:callsource:success:aborted:failure:)","title":"func validToken(backend: BackendService?, showLoginIfNeeded: Bool, loginProperties: [String : String]?, presentationViewController: UIViewController?, fetchRule: FetchRule?, callSource: String?, success: (_ authToken: TMAuthToken) -> Void, aborted: (_ oldAuthToken: TMAuthToken?, _ backend: BackendService) -> Void, failure: (_ oldAuthToken: TMAuthToken?, _ error: Error, _ backend: BackendService?) -> Void)","type":"method"},{"title":"Fetch Member Info","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/memberinfo(backend:relatedaccount:fetchrule:callsource:success:failure:)","title":"func memberInfo(backend: BackendService?, relatedAccount: TMMemberInfo.RelatedAccount?, fetchRule: FetchRule?, callSource: String?, success: (_ memberInfo: TMMemberInfo) -> Void, failure: (_ oldMemberInfo: TMMemberInfo?, _ error: Error, _ backend: BackendService?) -> Void)","type":"method"},{"title":"Multi-Factor Authentication","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/validatemfatoken(backend:mfaproperties:presentationviewcontroller:fetchrule:callsource:success:aborted:failure:)","title":"func validateMFAToken(backend: BackendService?, mfaProperties: [String : Any]?, presentationViewController: UIViewController?, fetchRule: FetchRule?, callSource: String?, success: (_ mfaToken: TMMFAToken) -> Void, aborted: (_ backend: BackendService) -> Void, failure: (_ error: Error, _ backend: BackendService?) -> Void)","type":"method"},{"title":"Delete Account (coming soon)","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/deleteaccount(backend:fetchrule:callsource:success:aborted:failure:)","title":"func deleteAccount(backend: BackendService?, fetchRule: FetchRule?, callSource: String?, success: (_ backend: BackendService) -> Void, aborted: (_ backend: BackendService) -> Void, failure: (_ error: Error, _ backend: BackendService?) -> Void)","type":"method"},{"title":"Logout","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/logout(backend:fetchrule:callsource:completion:)","title":"func logout(backend: BackendService?, fetchRule: FetchRule?, callSource: String?, completion: (_ backends: [BackendService]?) -> Void)","type":"method"},{"title":"Register for State Change Notifications","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/registerstatechanged(block:)","title":"func registerStateChanged(block: (_ backend: TMAuthentication.BackendService?, _ state: TMAuthentication.ServiceState, _ error: Error?) -> Void)","type":"method"},{"title":"Network Configuration (mainly internal use)","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxnetworkserviceconfig(backend:)","title":"func tmxNetworkServiceConfig(backend: BackendService?) -> TMXNetworkServiceConfig?","type":"method"},{"title":"Fetch Configuration (mainly internal use)","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/apigeeconfig(backend:fetchrule:success:failure:)","title":"func apigeeConfig(backend: BackendService?, fetchRule: FetchRule?, success: (_ config: TMApigeeConfig) -> Void, failure: (_ error: Error) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/apigeeconfig(tmxsettings:fetchrule:success:failure:)","title":"func apigeeConfig(tmxSettings: TMXSettings, fetchRule: FetchRule?, success: (_ config: TMApigeeConfig) -> Void, failure: (_ error: Error) -> Void)","type":"method"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/apigeeconfigurationnotcached","title":"static let apigeeConfigurationNotCached: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/apigeeconfigurationnotfound","title":"static let apigeeConfigurationNotFound: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/appattestserviceunavailable","title":"static let appAttestServiceUnavailable: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/appnotauthorized","title":"static let appNotAuthorized: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/assertiondatainvalid","title":"static let assertionDataInvalid: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/authtokenmissingrefreshtoken","title":"static let authTokenMissingRefreshToken: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/authtokenservicemismatch","title":"static let authTokenServiceMismatch: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/authtokensourceservicenotfound","title":"static let authTokenSourceServiceNotFound: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/configurationforbackendnotfound","title":"static let configurationForBackendNotFound: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/devicelimitreached","title":"static let deviceLimitReached: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/devicenotbound","title":"static let deviceNotBound: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/domain","title":"static let domain: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/externaltokenalreadyloggedin","title":"static let externalTokenAlreadyLoggedIn: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/externaltokenexchangedisabled","title":"static let externalTokenExchangeDisabled: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/externaltokenprovidernil","title":"static let externalTokenProviderNil: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/externaltokenrefreshrequiresui","title":"static let externalTokenRefreshRequiresUI: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/memberinfonotcached","title":"static let memberInfoNotCached: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/mfatokennotcached","title":"static let mfaTokenNotCached: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/mfawidgetfailedload","title":"static let mfaWidgetFailedLoad: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/mfawidgetmaxattempts","title":"static let mfaWidgetMaxAttempts: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/mfawidgetunauthorizeduser","title":"static let mfaWidgetUnauthorizedUser: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/mfawidgetunknown","title":"static let mfaWidgetUnknown: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/missingencrypteddeviceid","title":"static let missingEncryptedDeviceId: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/notsupportedbybackendservice","title":"static let notSupportedByBackendService: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/operationcanceled","title":"static let operationCanceled: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/relatedaccountnotfound","title":"static let relatedAccountNotFound: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/serviceconfigurationnilnotallowed","title":"static let serviceConfigurationNilNotAllowed: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/serviceconfigurationnotfound","title":"static let serviceConfigurationNotFound: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/serviceconfigurationsnotdefined","title":"static let serviceConfigurationsNotDefined: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/signaturedatainvalid","title":"static let signatureDataInvalid: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/unabletodecodeassertion","title":"static let unableToDecodeAssertion: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/unabletogenerateattestationkeyid","title":"static let unableToGenerateAttestationKeyId: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/unabletosigndevicekeyid","title":"static let unableToSignDeviceKeyId: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/unknown","title":"static let unknown: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/unknownjsonformat","title":"static let unknownJSONFormat: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/usernotloggedin","title":"static let userNotLoggedIn: NSError","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror\/userrefreshedasdifferentuser","title":"static let userRefreshedAsDifferentUser: NSError","type":"property"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autherror","title":"TMAuthentication.AuthError","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/allnotifications","title":"static var allNotifications: [Notification.Name]","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/backendkey","title":"static let backendKey: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/errorkey","title":"static let errorKey: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/loggedin","title":"static let loggedIn: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/loggedout","title":"static let loggedOut: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/loginaborted","title":"static let loginAborted: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/logincompleted","title":"static let loginCompleted: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/loginexternalexchanging","title":"static let loginExternalExchanging: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/loginfailed","title":"static let loginFailed: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/loginlinkaccountpresented","title":"static let loginLinkAccountPresented: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/loginoauthcodeexchanging","title":"static let loginOAuthCodeExchanging: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/loginpresented","title":"static let loginPresented: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/loginstarted","title":"static let loginStarted: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/loginsystemexchanging","title":"static let loginSystemExchanging: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/logoutcompleted","title":"static let logoutCompleted: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/logoutstarted","title":"static let logoutStarted: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/serviceconfigurationcompleted","title":"static let serviceConfigurationCompleted: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/serviceconfigurationstarted","title":"static let serviceConfigurationStarted: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/serviceconfigured","title":"static let serviceConfigured: Notification.Name","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/tokenrefreshed","title":"static let tokenRefreshed: Notification.Name","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/backend(notification:)","title":"static func backend(notification: Notification) -> TMAuthentication.BackendService?","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/error(notification:)","title":"static func error(notification: Notification) -> Error?","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification\/state(notificationname:)","title":"static func state(notificationName: Notification.Name) -> TMAuthentication.ServiceState?","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authnotification","title":"TMAuthentication.AuthNotification","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/init(source:region:environment:instanceid:)","title":"init(source: AuthSource, region: TMXDeploymentRegion?, environment: TMXDeploymentEnvironment?, instanceID: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/environment","title":"let environment: TMXDeploymentEnvironment","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/instanceid","title":"let instanceID: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/keyname","title":"var keyName: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/region","title":"let region: TMXDeploymentRegion?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/source","title":"let source: AuthSource","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/hostmodernaccounts","title":"static let HostModernAccounts: TMAuthentication.BackendService","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/mfxmodernaccounts","title":"static let MFXModernAccounts: TMAuthentication.BackendService","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/sportxr","title":"static let SportXR: TMAuthentication.BackendService","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/teammodernaccounts","title":"static let TeamModernAccounts: TMAuthentication.BackendService","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservice","title":"TMAuthentication.BackendService","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/brandedservicesettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/brandedservicesettings\/init(tmxsettings:branding:)","title":"init(tmxSettings: TMXSettings, branding: Branding?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/brandedservicesettings\/branding","title":"let branding: Branding","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/brandedservicesettings\/tmxsettings","title":"let tmxSettings: TMXSettings","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/brandedservicesettings\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/brandedservicesettings\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/brandedservicesettings","title":"TMAuthentication.BrandedServiceSettings","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/branding\/init(displayname:backgroundcolor:foregroundcolor:theme:enabletmbrandingcoloroverride:eventnametype:)","title":"init(displayName: String?, backgroundColor: UIColor?, foregroundColor: UIColor?, theme: ColorTheme?, enableTMBrandingColorOverride: Bool?, eventNameType: EventNameType?)","type":"init"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/branding\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/branding\/backgroundcolor","title":"let backgroundColor: UIColor","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/branding\/displayname","title":"let displayName: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/branding\/enabletmbrandingcoloroverride","title":"let enableTMBrandingColorOverride: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/branding\/eventnametype","title":"let eventNameType: EventNameType","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/branding\/foregroundcolor","title":"let foregroundColor: UIColor","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/branding\/theme","title":"let theme: ColorTheme","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/branding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/branding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/branding","title":"TMAuthentication.Branding","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/loginurloauth\/init(url:callbackurlscheme:codeverifier:state:)","title":"init(url: URL, callbackURLScheme: String, codeVerifier: String?, state: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/loginurloauth\/callbackurlscheme","title":"let callbackURLScheme: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/loginurloauth\/codeverifier","title":"let codeVerifier: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/loginurloauth\/state","title":"let state: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/loginurloauth\/url","title":"let url: URL","type":"property"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/loginurloauth","title":"TMAuthentication.LoginURLOAuth","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxsettings\/==(_:_:)","title":"static func == (TMXSettings, TMXSettings) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxsettings\/init(apikey:region:environment:)","title":"init(apiKey: String, region: TMXDeploymentRegion, environment: TMXDeploymentEnvironment)","type":"init"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxsettings\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxsettings\/apikey","title":"let apiKey: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxsettings\/environment","title":"let environment: TMXDeploymentEnvironment","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxsettings\/keyname","title":"var keyName: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxsettings\/region","title":"let region: TMXDeploymentRegion","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxsettings\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxsettings\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxsettings","title":"TMAuthentication.TMXSettings","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/autologinusingsystemexchangeonconfigure","title":"var autoLoginUsingSystemExchangeOnConfigure: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/delegate","title":"var delegate: TMAuthenticationDelegate?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/externaltokenproviderdelegate","title":"var externalTokenProviderDelegate: TMAuthenticationExternalTokenProvider?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/forceephemeralwebbrowsersession","title":"var forceEphemeralWebBrowserSession: Bool?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/internaltestingkeys","title":"var internalTestingKeys: [String : Any]","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/sdkbuildinfo","title":"var sdkBuildInfo: JSONDictionary?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/usebrandednavigationbar","title":"var useBrandedNavigationBar: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/usecombinedlogin","title":"var useCombinedLogin: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/version","title":"var version: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/clearallstatechangedblocks()","title":"func clearAllStateChangedBlocks()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/shared","title":"static let shared: TMAuthentication","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/modernaccountshost","title":"case modernAccountsHost","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/modernaccountsmicroflex","title":"case modernAccountsMicroflex","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/modernaccountsteam","title":"case modernAccountsTeam","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/sportxr","title":"case sportXR","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/keyname","title":"var keyName: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/publicname","title":"var publicName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/authsource","title":"TMAuthentication.AuthSource","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/colortheme\/dark","title":"case dark","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/colortheme\/light","title":"case light","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/colortheme\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/colortheme\/color","title":"var color: UIColor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/colortheme\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/colortheme\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/colortheme\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/colortheme\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/colortheme\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/colortheme\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/colortheme\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/colortheme","title":"TMAuthentication.ColorTheme","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype\/concert","title":"case concert","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype\/event","title":"case event","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype\/game","title":"case game","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype\/match","title":"case match","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype\/show","title":"case show","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/eventnametype","title":"TMAuthentication.EventNameType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/fetchrule\/cachedonly","title":"case cachedOnly","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/fetchrule\/fetchifempty","title":"case fetchIfEmpty","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/fetchrule\/fetchifemptyorold","title":"case fetchIfEmptyOrOld","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/fetchrule\/forcefetch","title":"case forceFetch","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/fetchrule\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/fetchrule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/fetchrule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/fetchrule\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/fetchrule\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/fetchrule\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/fetchrule\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/fetchrule\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/fetchrule","title":"TMAuthentication.FetchRule","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/infotoencode\/data(_:)","title":"case data(Data)","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/infotoencode\/string(_:)","title":"case string(String?)","type":"case"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/infotoencode","title":"TMAuthentication.InfoToEncode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/loggedin","title":"case loggedIn","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/loggedout","title":"case loggedOut","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/loginaborted","title":"case loginAborted","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/logincompleted","title":"case loginCompleted","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/loginexternalexchanging","title":"case loginExternalExchanging","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/loginfailed","title":"case loginFailed","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/loginlinkaccountpresented","title":"case loginLinkAccountPresented","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/loginoauthcodeexchanging","title":"case loginOAuthCodeExchanging","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/loginpresented","title":"case loginPresented","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/loginstarted","title":"case loginStarted","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/loginsystemexchanging","title":"case loginSystemExchanging","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/logoutcompleted","title":"case logoutCompleted","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/logoutstarted","title":"case logoutStarted","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/serviceconfigurationcompleted","title":"case serviceConfigurationCompleted","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/serviceconfigurationstarted","title":"case serviceConfigurationStarted","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/serviceconfigured","title":"case serviceConfigured","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/tokenrefreshed","title":"case tokenRefreshed","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/notificationname","title":"var notificationName: Notification.Name","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/state(fornotification:)","title":"static func state(forNotification: Notification) -> ServiceState?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/servicestate","title":"TMAuthentication.ServiceState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/preproduction","title":"case PreProduction","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/production","title":"case Production","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/qa","title":"case QA","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/staging","title":"case Staging","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/stagingnew","title":"case StagingNew","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/keyname","title":"var keyName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentenvironment","title":"TMAuthentication.TMXDeploymentEnvironment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentregion\/uk","title":"case UK","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentregion\/us","title":"case US","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentregion\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentregion\/keyname","title":"var keyName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentregion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentregion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentregion\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentregion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentregion\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentregion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentregion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxdeploymentregion","title":"TMAuthentication.TMXDeploymentRegion","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/apigeeconfig(backend:fetchrule:success:failure:)","title":"func apigeeConfig(backend: BackendService?, fetchRule: FetchRule?, success: (_ config: TMApigeeConfig) -> Void, failure: (_ error: Error) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/apigeeconfig(tmxsettings:fetchrule:success:failure:)","title":"func apigeeConfig(tmxSettings: TMXSettings, fetchRule: FetchRule?, success: (_ config: TMApigeeConfig) -> Void, failure: (_ error: Error) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/backendservicesconfigured(source:instanceid:)","title":"func backendServicesConfigured(source: AuthSource?, instanceID: String?) -> [BackendService]","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/removeallconfiguredbackendservices(completion:)","title":"func removeAllConfiguredBackendServices(completion: (_ success: Bool) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmxnetworkserviceconfig(backend:)","title":"func tmxNetworkServiceConfig(backend: BackendService?) -> TMXNetworkServiceConfig?","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmapigeeconfigurationprovider-implementations","title":"TMApigeeConfigurationProvider Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/clearallcacheddata(callsource:completion:)","title":"func clearAllCachedData(callSource: String?, completion: () -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/deleteaccount(backend:fetchrule:callsource:success:aborted:failure:)","title":"func deleteAccount(backend: BackendService?, fetchRule: FetchRule?, callSource: String?, success: (_ backend: BackendService) -> Void, aborted: (_ backend: BackendService) -> Void, failure: (_ error: Error, _ backend: BackendService?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/hastoken(backend:)","title":"func hasToken(backend: BackendService?) -> Bool","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/hasunexpiredtoken(backend:)","title":"func hasUnexpiredToken(backend: BackendService?) -> Bool","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/login(backend:externaltoken:loginproperties:presentationviewcontroller:fetchrule:callsource:success:aborted:failure:)","title":"func login(backend: BackendService?, externalToken: String?, loginProperties: [String : String]?, presentationViewController: UIViewController?, fetchRule: FetchRule?, callSource: String?, success: (_ authToken: TMAuthToken) -> Void, aborted: (_ oldAuthToken: TMAuthToken?, _ backend: BackendService) -> Void, failure: (_ oldAuthToken: TMAuthToken?, _ error: Error, _ backend: BackendService?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/loginselectionpage(backend:loginproperties:fetchrule:callsource:)","title":"func loginSelectionPage(backend: BackendService?, loginProperties: [String : String]?, fetchRule: FetchRule?, callSource: String?) -> UIViewController?","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/logout(backend:fetchrule:callsource:completion:)","title":"func logout(backend: BackendService?, fetchRule: FetchRule?, callSource: String?, completion: (_ backends: [BackendService]?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/logoutall(fetchrule:callsource:completion:)","title":"func logoutAll(fetchRule: FetchRule?, callSource: String?, completion: (_ backends: [BackendService]?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/memberinfo(backend:relatedaccount:fetchrule:callsource:success:failure:)","title":"func memberInfo(backend: BackendService?, relatedAccount: TMMemberInfo.RelatedAccount?, fetchRule: FetchRule?, callSource: String?, success: (_ memberInfo: TMMemberInfo) -> Void, failure: (_ oldMemberInfo: TMMemberInfo?, _ error: Error, _ backend: BackendService?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/validtoken(backend:showloginifneeded:loginproperties:presentationviewcontroller:fetchrule:callsource:success:aborted:failure:)","title":"func validToken(backend: BackendService?, showLoginIfNeeded: Bool, loginProperties: [String : String]?, presentationViewController: UIViewController?, fetchRule: FetchRule?, callSource: String?, success: (_ authToken: TMAuthToken) -> Void, aborted: (_ oldAuthToken: TMAuthToken?, _ backend: BackendService) -> Void, failure: (_ oldAuthToken: TMAuthToken?, _ error: Error, _ backend: BackendService?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/validatemfatoken(backend:mfaproperties:presentationviewcontroller:fetchrule:callsource:success:aborted:failure:)","title":"func validateMFAToken(backend: BackendService?, mfaProperties: [String : Any]?, presentationViewController: UIViewController?, fetchRule: FetchRule?, callSource: String?, success: (_ mfaToken: TMMFAToken) -> Void, aborted: (_ backend: BackendService) -> Void, failure: (_ error: Error, _ backend: BackendService?) -> Void)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmauthenticationprovider-implementations","title":"TMAuthenticationProvider Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/bindnewdevicekey(backend:fetchrule:callsource:success:failure:)","title":"func bindNewDeviceKey(backend: BackendService?, fetchRule: FetchRule?, callSource: String, success: (_ remainingKeys: Int?) -> Void, failure: (_ error: Error, _ backend: BackendService?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/bounddeviceidsignature(backend:callsource:infotoencode:success:failure:)","title":"func boundDeviceIdSignature(backend: BackendService?, callSource: String, infoToEncode: InfoToEncode, success: (_ deviceKey: TMDeviceKey) -> Void, failure: (_ error: Error, _ backend: BackendService?) -> Void)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication\/tmdevicebindingprovider-implementations","title":"TMDeviceBindingProvider Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthentication","title":"TMAuthentication","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfigurationprovider\/apigeeconfig(backend:fetchrule:success:failure:)","title":"func apigeeConfig(backend: TMAuthentication.BackendService?, fetchRule: TMAuthentication.FetchRule?, success: (_ config: TMApigeeConfig) -> Void, failure: (_ error: Error) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfigurationprovider\/apigeeconfig(tmxsettings:fetchrule:success:failure:)","title":"func apigeeConfig(tmxSettings: TMAuthentication.TMXSettings, fetchRule: TMAuthentication.FetchRule?, success: (_ config: TMApigeeConfig) -> Void, failure: (_ error: Error) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfigurationprovider\/backendservicesconfigured(source:instanceid:)","title":"func backendServicesConfigured(source: TMAuthentication.AuthSource?, instanceID: String?) -> [TMAuthentication.BackendService]","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfigurationprovider\/removeallconfiguredbackendservices(completion:)","title":"func removeAllConfiguredBackendServices(completion: (_ success: Bool) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfigurationprovider\/tmxnetworkserviceconfig(backend:)","title":"func tmxNetworkServiceConfig(backend: TMAuthentication.BackendService?) -> TMXNetworkServiceConfig?","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfigurationprovider","title":"TMApigeeConfigurationProvider","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/ticketmasterauthentication\/tmassertion\/init(format:authenticatordata:clientdatajsonhash:signature:)-7dcp","title":"init(format: UInt8, authenticatorData: Data, clientDataJSONHash: Data, signature: Data)","type":"init"}],"title":"TMAssertion Implementations","type":"groupMarker"}],"path":"\/documentation\/ticketmasterauthentication\/tmassertion\/init(format:authenticatordata:clientdatajsonhash:signature:)-5ii9a","title":"init(format: UInt8, authenticatorData: Data, clientDataJSONHash: Data, signature: Data)","type":"init"},{"children":[{"children":[{"path":"\/documentation\/ticketmasterauthentication\/tmassertion\/init(format:signature:)-6ob9x","title":"init(format: UInt8, signature: Data)","type":"init"}],"title":"TMAssertion Implementations","type":"groupMarker"}],"path":"\/documentation\/ticketmasterauthentication\/tmassertion\/init(format:signature:)-538l2","title":"init(format: UInt8, signature: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmassertion\/authenticatordata","title":"var authenticatorData: Data?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmassertion\/clientdatajsonhash","title":"var clientDataJSONHash: Data?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmassertion\/format","title":"var format: UInt8","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmassertion\/signature","title":"var signature: Data","type":"property"}],"path":"\/documentation\/ticketmasterauthentication\/tmassertion","title":"TMAssertion","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationdelegate\/onstatechanged(backend:state:error:)","title":"func onStateChanged(backend: TMAuthentication.BackendService?, state: TMAuthentication.ServiceState, error: Error?)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationdelegate","title":"TMAuthenticationDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationexternaltokenprovider\/refresh(backend:oldexternaltoken:showloginifneeded:success:aborted:failure:)","title":"func refresh(backend: TMAuthentication.BackendService, oldExternalToken: String, showLoginIfNeeded: Bool, success: (_ refreshedExternalToken: String) -> Void, aborted: () -> Void, failure: (_ error: Error) -> Void)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationexternaltokenprovider","title":"TMAuthenticationExternalTokenProvider","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/autologinusingsystemexchangeonconfigure","title":"var autoLoginUsingSystemExchangeOnConfigure: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/forceephemeralwebbrowsersession","title":"var forceEphemeralWebBrowserSession: Bool?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/usecombinedlogin","title":"var useCombinedLogin: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/clearallcacheddata(callsource:completion:)","title":"func clearAllCachedData(callSource: String?, completion: () -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/clearallstatechangedblocks()","title":"func clearAllStateChangedBlocks()","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/deleteaccount(backend:fetchrule:callsource:success:aborted:failure:)","title":"func deleteAccount(backend: TMAuthentication.BackendService?, fetchRule: TMAuthentication.FetchRule?, callSource: String?, success: (_ backend: TMAuthentication.BackendService) -> Void, aborted: (_ backend: TMAuthentication.BackendService) -> Void, failure: (_ error: Error, _ backend: TMAuthentication.BackendService?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/hastoken(backend:)","title":"func hasToken(backend: TMAuthentication.BackendService?) -> Bool","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/hasunexpiredtoken(backend:)","title":"func hasUnexpiredToken(backend: TMAuthentication.BackendService?) -> Bool","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/login(backend:externaltoken:loginproperties:presentationviewcontroller:fetchrule:callsource:success:aborted:failure:)","title":"func login(backend: TMAuthentication.BackendService?, externalToken: String?, loginProperties: [String : String]?, presentationViewController: UIViewController?, fetchRule: TMAuthentication.FetchRule?, callSource: String?, success: (_ authToken: TMAuthToken) -> Void, aborted: (_ oldAuthToken: TMAuthToken?, _ backend: TMAuthentication.BackendService) -> Void, failure: (_ oldAuthToken: TMAuthToken?, _ error: Error, _ backend: TMAuthentication.BackendService?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/loginselectionpage(backend:loginproperties:fetchrule:callsource:)","title":"func loginSelectionPage(backend: TMAuthentication.BackendService?, loginProperties: [String : String]?, fetchRule: TMAuthentication.FetchRule?, callSource: String?) -> UIViewController?","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/logout(backend:fetchrule:callsource:completion:)","title":"func logout(backend: TMAuthentication.BackendService?, fetchRule: TMAuthentication.FetchRule?, callSource: String?, completion: (_ backends: [TMAuthentication.BackendService]?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/logoutall(fetchrule:callsource:completion:)","title":"func logoutAll(fetchRule: TMAuthentication.FetchRule?, callSource: String?, completion: (_ backends: [TMAuthentication.BackendService]?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/memberinfo(backend:relatedaccount:fetchrule:callsource:success:failure:)","title":"func memberInfo(backend: TMAuthentication.BackendService?, relatedAccount: TMMemberInfo.RelatedAccount?, fetchRule: TMAuthentication.FetchRule?, callSource: String?, success: (_ memberInfo: TMMemberInfo) -> Void, failure: (_ oldMemberInfo: TMMemberInfo?, _ error: Error, _ backend: TMAuthentication.BackendService?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/registerstatechanged(block:)","title":"func registerStateChanged(block: (_ backend: TMAuthentication.BackendService?, _ state: TMAuthentication.ServiceState, _ error: Error?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/validtoken(backend:showloginifneeded:loginproperties:presentationviewcontroller:fetchrule:callsource:success:aborted:failure:)","title":"func validToken(backend: TMAuthentication.BackendService?, showLoginIfNeeded: Bool, loginProperties: [String : String]?, presentationViewController: UIViewController?, fetchRule: TMAuthentication.FetchRule?, callSource: String?, success: (_ authToken: TMAuthToken) -> Void, aborted: (_ oldAuthToken: TMAuthToken?, _ backend: TMAuthentication.BackendService) -> Void, failure: (_ oldAuthToken: TMAuthToken?, _ error: Error, _ backend: TMAuthentication.BackendService?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider\/validatemfatoken(backend:mfaproperties:presentationviewcontroller:fetchrule:callsource:success:aborted:failure:)","title":"func validateMFAToken(backend: TMAuthentication.BackendService?, mfaProperties: [String : Any]?, presentationViewController: UIViewController?, fetchRule: TMAuthentication.FetchRule?, callSource: String?, success: (_ mfaToken: TMMFAToken) -> Void, aborted: (_ backend: TMAuthentication.BackendService) -> Void, failure: (_ error: Error, _ backend: TMAuthentication.BackendService?) -> Void)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthenticationprovider","title":"TMAuthenticationProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmdevicebindingprovider\/bindnewdevicekey(backend:fetchrule:callsource:success:failure:)","title":"func bindNewDeviceKey(backend: TMAuthentication.BackendService?, fetchRule: TMAuthentication.FetchRule?, callSource: String, success: (_ remainingKeys: Int?) -> Void, failure: (_ error: Error, _ backend: TMAuthentication.BackendService?) -> Void)","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmdevicebindingprovider\/bounddeviceidsignature(backend:callsource:infotoencode:success:failure:)","title":"func boundDeviceIdSignature(backend: TMAuthentication.BackendService?, callSource: String, infoToEncode: TMAuthentication.InfoToEncode, success: (_ deviceKey: TMDeviceKey) -> Void, failure: (_ error: Error, _ backend: TMAuthentication.BackendService?) -> Void)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmdevicebindingprovider","title":"TMDeviceBindingProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/ticketmasterauthentication\/tmencodableassertion\/base64urlencodedstring()-43bvy","title":"func base64URLEncodedString() -> String?","type":"method"}],"title":"TMEncodableAssertion Implementations","type":"groupMarker"}],"path":"\/documentation\/ticketmasterauthentication\/tmencodableassertion\/base64urlencodedstring()-612rf","title":"func base64URLEncodedString() -> String?","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmencodableassertion","title":"TMEncodableAssertion","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/appattestassertion\/init(authenticatordata:clientdatajsonhash:signature:)","title":"init(authenticatorData: Data, clientDataJSONHash: Data, signature: Data)","type":"init"},{"path":"\/documentation\/ticketmasterauthentication\/appattestassertion\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/appattestassertion\/authenticatordata","title":"var authenticatorData: Data?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/appattestassertion\/clientdatajsonhash","title":"var clientDataJSONHash: Data?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/appattestassertion\/format","title":"var format: UInt8","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/appattestassertion\/signature","title":"var signature: Data","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/appattestassertion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/appattestassertion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/appattestassertion\/init(format:authenticatordata:clientdatajsonhash:signature:)","title":"init(format: UInt8, authenticatorData: Data, clientDataJSONHash: Data, signature: Data)","type":"init"},{"path":"\/documentation\/ticketmasterauthentication\/appattestassertion\/init(format:signature:)","title":"init(format: UInt8, signature: Data)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/appattestassertion\/base64urlencodedstring()","title":"func base64URLEncodedString() -> String?","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/appattestassertion\/tmassertion-implementations","title":"TMAssertion Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/appattestassertion","title":"AppAttestAssertion","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/analytics-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/analytics-swift.struct\/batchsize","title":"let batchSize: Int","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/analytics-swift.struct\/batchtime","title":"let batchTime: Int","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/analytics-swift.struct\/enabled","title":"let enabled: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/analytics-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/analytics-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/analytics-swift.struct","title":"TMApigeeConfig.Analytics","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/accountswitchenabled","title":"let accountSwitchEnabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/assignflowlearnmoreurls","title":"let assignFlowLearnMoreURLs: [String : URL]?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/attractionidfilter","title":"let attractionIdFilter: [String]?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/barcodev2enabled","title":"let barcodeV2Enabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/barcodev2howtourl","title":"let barcodeV2HowToURL: URL?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/cmsmodulesenabled","title":"let cmsModulesEnabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/eventsthrottling","title":"let eventsThrottling: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/externalmodulesenabled","title":"let externalModulesEnabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/fanwalletenabled","title":"let fanWalletEnabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/forceeventsdesignversion","title":"let forceEventsDesignVersion: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/forceticketsdesignversion","title":"let forceTicketsDesignVersion: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/iscatalanlocale","title":"var isCatalanLocale: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/isczechlocale","title":"var isCzechLocale: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/isdanishlocale","title":"var isDanishLocale: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/isdutchlocale","title":"var isDutchLocale: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/isenglishlocale","title":"var isEnglishLocale: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/isfinnishlocale","title":"var isFinnishLocale: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/isfrenchlocale","title":"var isFrenchLocale: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/isgermanlocale","title":"var isGermanLocale: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/isitalianlocale","title":"var isItalianLocale: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/isnorwegianlocale","title":"var isNorwegianLocale: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/ispolishlocale","title":"var isPolishLocale: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/issellbuttonhidden","title":"let isSellButtonHidden: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/isspanishlocale","title":"var isSpanishLocale: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/isswedishlocale","title":"var isSwedishLocale: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/localestring","title":"let localeString: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/logourl","title":"let logoURL: URL?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/marketdomain","title":"var marketDomain: TicketmasterFoundation.MarketDomain","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/passesthrottling","title":"let passesThrottling: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/prefetchticketsenabled","title":"let prefetchTicketsEnabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/quicklogindisabled","title":"let quickLoginDisabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/sellmanagelistingsoverrideurl","title":"let sellManageListingsOverrideURL: URL?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/ticketsthrottling","title":"let ticketsThrottling: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/timepool","title":"let timePool: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/upselladdonsenabled","title":"let upsellAddOnsEnabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/useiccpfetchtickets","title":"let useICCPFetchTickets: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/uwdkey","title":"let uwdKey: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/validlocale","title":"var validLocale: Locale","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/validlocaleacceptlanguagecode","title":"var validLocaleAcceptLanguageCode: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/validlocalecountrycode","title":"var validLocaleCountryCode: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/validlocalelanguagecode","title":"var validLocaleLanguageCode: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/venueidfilter","title":"let venueIdFilter: [String]?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/venuenextdisabled","title":"let venueNextDisabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/venuesuppressionrules","title":"let venueSuppressionRules: [VenueSuppressionRule]?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/venueunsuppressruleidentifier","title":"let venueUnsuppressRuleIdentifier: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.struct","title":"TMApigeeConfig.Base","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/faneducation-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/faneducation-swift.struct\/backgroundcolor","title":"var backgroundColor: UIColor?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/faneducation-swift.struct\/backgroundcolorstring","title":"let backgroundColorString: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/faneducation-swift.struct\/resaletipenabled","title":"let resaleTipEnabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/faneducation-swift.struct\/tintcolor","title":"var tintColor: UIColor?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/faneducation-swift.struct\/tintcolorstring","title":"let tintColorString: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/faneducation-swift.struct\/transfertipenabled","title":"let transferTipEnabled: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/faneducation-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/faneducation-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/faneducation-swift.struct","title":"TMApigeeConfig.FanEducation","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/host-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/host-swift.struct\/consumerkey","title":"let consumerKey: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/host-swift.struct\/consumersecret","title":"let consumerSecret: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/host-swift.struct\/enabled","title":"let enabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/host-swift.struct\/redirecturl","title":"let redirectURL: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/host-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/host-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/host-swift.struct","title":"TMApigeeConfig.Federated.Host","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/team-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/team-swift.struct\/apikey","title":"let apiKey: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/team-swift.struct\/clientname","title":"var clientName: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/team-swift.struct\/consumerkey","title":"let consumerKey: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/team-swift.struct\/consumersecret","title":"let consumerSecret: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/team-swift.struct\/enabled","title":"let enabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/team-swift.struct\/redirecturl","title":"let redirectURL: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/team-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/team-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/team-swift.struct","title":"TMApigeeConfig.Federated.Team","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/host-swift.property","title":"let host: Host?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/team-swift.property","title":"let team: Team?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.struct","title":"TMApigeeConfig.Federated","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/forcedlogout-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/forcedlogout-swift.struct\/instance","title":"let instance: Double","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/forcedlogout-swift.struct\/sdkversion","title":"let sdkVersion: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/forcedlogout-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/forcedlogout-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/forcedlogout-swift.struct","title":"TMApigeeConfig.ForcedLogout","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/gameday-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/gameday-swift.struct\/defaulturl","title":"var defaultUrl: URL?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/gameday-swift.struct\/enabled","title":"let enabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/gameday-swift.struct\/redirecturl","title":"let redirectURL: URL?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/gameday-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/gameday-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/gameday-swift.struct","title":"TMApigeeConfig.GameDay","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/launchaction-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/launchaction-swift.struct\/typeoflaunchactionurlviewer","title":"let typeOfLaunchActionUrlViewer: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/launchaction-swift.struct\/webviewurl","title":"let webviewURL: URL?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/launchaction-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/launchaction-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/launchaction-swift.struct","title":"TMApigeeConfig.LaunchAction","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/clientid","title":"let clientId: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/enabled","title":"let enabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/forcewebtransfer","title":"let forceWebTransfer: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/integratorid","title":"let integratorId: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/mfaclientid","title":"let mfaClientId: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/mfaenabled","title":"let mfaEnabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/placementid","title":"let placementId: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/prefersephemeralwebbrowsersession","title":"let prefersEphemeralWebBrowserSession: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/redirectscheme","title":"let redirectScheme: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/scope","title":"let scope: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/sitetoken","title":"let siteToken: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/visualpresets","title":"let visualPresets: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/configuration","title":"TMApigeeConfig.ModernAccounts.Configuration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/allowteamtohostsystemexchange","title":"let allowTeamToHostSystemExchange: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/host","title":"let host: Configuration?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/mfx","title":"let mfx: Configuration?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/systemexchangeclientids","title":"let systemExchangeClientIDs: [String]?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/team","title":"let team: Configuration?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/tmxwillcreateexternalguestuser","title":"let tmxWillCreateExternalGuestUser: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.struct","title":"TMApigeeConfig.ModernAccounts","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/consumerkey","title":"let consumerKey: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/cookiedomainfromcookiename","title":"var cookieDomainFromCookieName: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/cookiedomainfromteamdomain","title":"var cookieDomainFromTeamDomain: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/cookiedomains","title":"let cookieDomains: [String]?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/cookiename","title":"let cookieName: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/enabled","title":"let enabled: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/prefersephemeralwebbrowsersession","title":"let prefersEphemeralWebBrowserSession: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/redirectscheme","title":"let redirectScheme: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/scope","title":"let scope: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/teamdomain","title":"let teamDomain: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/teampathname","title":"let teamPathName: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/tenantid","title":"let tenantId: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.struct","title":"TMApigeeConfig.SportXR","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/venuesuppressionrule\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/venuesuppressionrule\/appname","title":"let appName: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/venuesuppressionrule\/appurl","title":"let appURL: URL?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/venuesuppressionrule\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/venuesuppressionrule\/venuediscoveryids","title":"let venueDiscoveryIds: [String]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/venuesuppressionrule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/venuesuppressionrule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/venuesuppressionrule","title":"TMApigeeConfig.VenueSuppressionRule","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/init(jsondictionary:originaldata:tmxsettings:forcedjsondictionary:acquireddate:)","title":"init(jsonDictionary: JSONDictionary, originalData: Data, tmxSettings: TMAuthentication.TMXSettings, forcedJSONDictionary: JSONDictionary?, acquiredDate: Date?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/acquireddate","title":"let acquiredDate: Date","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/analytics-swift.property","title":"let analytics: Analytics","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/base-swift.property","title":"let base: Base","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/faneducation-swift.property","title":"let fanEducation: FanEducation","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/federated-swift.property","title":"let federated: Federated?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/forcedlogout-swift.property","title":"let forcedLogout: ForcedLogout?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/gameday-swift.property","title":"let gameday: GameDay","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/launchaction-swift.property","title":"let launchAction: LaunchAction?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.property","title":"var loginServiceCombination: LoginServiceCombination?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/modernaccounts-swift.property","title":"let modernAccounts: ModernAccounts?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/originaldata","title":"let originalData: Data","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/sportxr-swift.property","title":"let sportXR: SportXR?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/tmxsettings","title":"let tmxSettings: TMAuthentication.TMXSettings","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/hostonly","title":"case hostOnly","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/microflexonly","title":"case microflexOnly","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/sportxrhost","title":"case sportXRHost","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/sportxrmicroflex","title":"case sportXRMicroflex","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/sportxronly","title":"case sportXROnly","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/teamhost","title":"case teamHost","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/teammicroflex","title":"case teamMicroflex","type":"case"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/teamonly","title":"case teamOnly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/loginservicecombination-swift.enum","title":"TMApigeeConfig.LoginServiceCombination","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmapigeeconfig","title":"TMApigeeConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/init(backend:exchangesourcebackend:externaltoken:accesstoken:tokentype:scope:expiredate:idtoken:hmacid:accountmanagerhmacid:donotsellflag:)","title":"init(backend: TMAuthentication.BackendService, exchangeSourceBackend: TMAuthentication.BackendService?, externalToken: String?, accessToken: String, tokenType: String?, scope: String?, expireDate: Date, idToken: String?, hmacID: String?, accountManagerHmacID: String?, doNotSellFlag: Bool?)","type":"init"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/accesstoken","title":"let accessToken: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/accountmanagerhmacid","title":"let accountManagerHmacID: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/backend","title":"let backend: TMAuthentication.BackendService","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/donotsellflag","title":"let doNotSellFlag: Bool?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/exchangesourcebackend","title":"let exchangeSourceBackend: TMAuthentication.BackendService?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/expiredate","title":"let expireDate: Date","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/externaltoken","title":"let externalToken: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/hmacid","title":"let hmacID: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/idtoken","title":"let idToken: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/scope","title":"let scope: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/tokentype","title":"let tokenType: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmauthtoken","title":"TMAuthToken","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmdevicekey\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/ticketmasterauthentication\/tmdevicekey\/init(keyid:assertion:)","title":"init(keyId: Data, assertion: AppAttestAssertion)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmdevicekey\/assertion","title":"let assertion: AppAttestAssertion","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmdevicekey\/keyid","title":"let keyId: Data","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmdevicekey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmdevicekey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmdevicekey","title":"TMDeviceKey","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmmfatoken\/init(backend:deviceverifiedtoken:encrypteddeviceid:)","title":"init(backend: TMAuthentication.BackendService, deviceVerifiedToken: String, encryptedDeviceID: String)","type":"init"},{"path":"\/documentation\/ticketmasterauthentication\/tmmfatoken\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmmfatoken\/backend","title":"let backend: TMAuthentication.BackendService","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmfatoken\/deviceverifiedtoken","title":"let deviceVerifiedToken: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmfatoken\/encrypteddeviceid","title":"let encryptedDeviceID: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmmfatoken\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmmfatoken\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmmfatoken","title":"TMMFAToken","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/relatedaccount\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/relatedaccount\/init(localid:nickname:isdefault:iscurrent:)","title":"init(localID: String, nickname: String, isDefault: Bool, isCurrent: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/relatedaccount\/iscurrent","title":"let isCurrent: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/relatedaccount\/isdefault","title":"let isDefault: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/relatedaccount\/localid","title":"let localID: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/relatedaccount\/nickname","title":"let nickname: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/relatedaccount\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/relatedaccount\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/relatedaccount","title":"TMMemberInfo.RelatedAccount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/termsofuse-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/termsofuse-swift.struct\/init(version:acceptancerequired:text:)","title":"init(version: String?, acceptanceRequired: Bool, text: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/termsofuse-swift.struct\/acceptancerequired","title":"let acceptanceRequired: Bool","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/termsofuse-swift.struct\/text","title":"let text: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/termsofuse-swift.struct\/version","title":"let version: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/termsofuse-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/termsofuse-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/termsofuse-swift.struct","title":"TMMemberInfo.TermsOfUse","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/init(backend:localid:globalid:hmacid:donotsellflag:firstname:lastname:email:phone:postalcode:language:country:relatedaccounts:termsofuse:acquireddate:)","title":"init(backend: TMAuthentication.BackendService, localID: String?, globalID: String?, hmacID: String?, doNotSellFlag: Bool?, firstName: String?, lastName: String?, email: String?, phone: String?, postalCode: String?, language: String?, country: String?, relatedAccounts: [RelatedAccount]?, termsOfUse: TermsOfUse?, acquiredDate: Date)","type":"init"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/acquireddate","title":"let acquiredDate: Date","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/backend","title":"let backend: TMAuthentication.BackendService","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/country","title":"let country: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/donotsellflag","title":"let doNotSellFlag: Bool?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/email","title":"let email: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/firstname","title":"let firstName: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/globalid","title":"let globalID: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/hmacid","title":"let hmacID: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/language","title":"let language: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/lastname","title":"let lastName: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/localid","title":"let localID: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/phone","title":"let phone: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/postalcode","title":"let postalCode: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/relatedaccounts","title":"let relatedAccounts: [RelatedAccount]?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/termsofuse-swift.property","title":"let termsOfUse: TermsOfUse?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/localid(relatedaccount:)","title":"func localID(relatedAccount: TMMemberInfo.RelatedAccount?) -> String?","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/relatedaccount(localid:)","title":"func relatedAccount(localID: String) -> TMMemberInfo.RelatedAccount?","type":"method"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/verify(relatedaccount:)","title":"func verify(relatedAccount: TMMemberInfo.RelatedAccount?) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmmemberinfo","title":"TMMemberInfo","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/responseinfo-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/responseinfo-swift.struct\/gamedayenabled","title":"let gameDayEnabled: Bool?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/responseinfo-swift.struct\/gamedayurl","title":"let gameDayURL: URL?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/responseinfo-swift.struct\/sessionbid","title":"let sessionBID: String?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/responseinfo-swift.struct\/sessionsid","title":"let sessionSID: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/responseinfo-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/responseinfo-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/responseinfo-swift.struct","title":"TMXNetworkServiceConfig.ResponseInfo","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/backendservice","title":"let backendService: TMAuthentication.BackendService","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/brandedservicesettings","title":"var brandedServiceSettings: TMAuthentication.BrandedServiceSettings","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/branding","title":"let branding: TMAuthentication.Branding?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/deviceguid","title":"let deviceGUID: UUID","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/localestring","title":"let localeString: String","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/responseinfo-swift.property","title":"let responseInfo: ResponseInfo?","type":"property"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/tmxsettings","title":"let tmxSettings: TMAuthentication.TMXSettings","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/tmxnetworkserviceconfig","title":"TMXNetworkServiceConfig","type":"struct"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ticketmasterauthentication\/uikit\/uiviewcontroller\/presentationanchor(for:)","title":"func presentationAnchor(for: ASWebAuthenticationSession) -> ASPresentationAnchor","type":"method"}],"path":"\/documentation\/ticketmasterauthentication\/uikit\/uiviewcontroller\/aswebauthenticationpresentationcontextproviding-implementations","title":"ASWebAuthenticationPresentationContextProviding Implementations","type":"symbol"}],"path":"\/documentation\/ticketmasterauthentication\/uikit\/uiviewcontroller","title":"UIViewController","type":"extension"}],"path":"\/documentation\/ticketmasterauthentication\/uikit","title":"UIKit","type":"extension"}],"path":"\/documentation\/ticketmasterauthentication","title":"TicketmasterAuthentication","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}